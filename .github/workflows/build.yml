name: Build

on:
  push:
  workflow_dispatch:

jobs:

  build_custom_boards:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: "true"
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Setup STM32CubeIDE
      run: |
        wget -q -O /tmp/stm32cubeide-installer.sh.zip https://mc8051.de/en.st-stm32cubeide_1.13.1_17479_20230728_0839_amd64.deb_bundle.sh.zip \
          && unzip -p /tmp/stm32cubeide-installer.sh.zip > /tmp/stm32cubeide-installer.sh \
          && rm /tmp/stm32cubeide-installer.sh.zip \
          && chmod +x /tmp/stm32cubeide-installer.sh \
          && /tmp/stm32cubeide-installer.sh --target /tmp/debfiles/ --noexec \
          && sudo apt-get -y update \
          && sudo LICENSE_ALREADY_ACCEPTED=1 DEBIAN_FRONTEND=noninteractive apt-get -y -f --no-install-recommends install /tmp/debfiles/***.deb

    - name: Copy local boards
      run: cp -rf customTargets/* mLRS/mLRS/
    - name: Copy local tools
      run: cp -rf tools/* mLRS/
    - name: Apply local patches
      run: find patches/ -type f -name "*.patch" | xargs -I {} git -C mLRS/ apply {}

    - name: Initialize missing defines for DIY boards
      working-directory: mLRS/tools/
      run: python ./run_init_diy_targets.py --no-pause

    - name: Setup mLRS repository
      working-directory: mLRS/
      run: python ./run_setup.py
    - name: Run build firmwares
      working-directory: mLRS/tools/
      run: python ./run_make_firmwares3.py

    - name: List files
      continue-on-error: true
      run: ls -lah mLRS/

    - name: "DEBUG: show Common/hal"
      continue-on-error: true
      run: cat mLRS/mLRS/Common/hal/hal.h
    - name: "DEBUG: show Common/device_conf"
      continue-on-error: true
      run: cat mLRS/mLRS/Common/hal/device_conf.h
    
    - uses: actions/upload-artifact@v3
      with:
        name: releases
        path: ./mLRS/firmware/